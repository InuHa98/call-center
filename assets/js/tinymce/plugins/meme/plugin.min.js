;(function (tinymce, $) {
    'use strict';


    var Meme = function(editor, options) {
        this.editor = editor;
        this.size_image = options.size_image;
        this.sources = options.sources;

        if(this.sources.length > 0)
        {
            var button_data = {
                type: 'buttongroup',
                items: []
            };

            for(var i = 0; i < this.sources.length; i++) {
                button_data.items.push(this.addButton(this.sources[i]));
            }

			this.editor.addButton('meme', button_data);
        }
    };

    Meme.prototype = {
        constructor: Meme,
        class_item: 'mce-smiles-item',
        data_url_attr: 'data-smile-url',

        renderHTML: function(images) {

            if(images.length < 1) {
                return null;
            }

            var container = $('#' + this.editor.id);

			var width = container.outerWidth(true) - 20,
				height = container.outerHeight(true) - 20;

            var class_item = this.class_item,
                data_url = this.data_url_attr;

            var html = '<div role="" class="mce-smiles-box">';

            var addImage = function(url) {
                return '<div class="'+class_item+'" '+data_url+'="' + url + '"><img src="' + url + '"></div>';
            };

            tinymce.each(images, function(column){
                if(typeof column === "object")
                {
                    tinymce.each(column, function(row){
                        html += addImage(row);
                    });					
                }
                else
                {
                    html += addImage(column);
                }
            });
            html += '</div>';

            return html;
        },

        addButton: function(source) {
            var editor = this.editor;
            var name = source.name || false,
                images = source.images || [];

            var class_item = this.class_item,
                data_url = this.data_url_attr;

            return {
                type: "panelbutton",
                tooltip: name,
                image: images[0] || null,
                classes: 'smiles-button',
                onclick: function(data) {
                    var panel = $(this.panel.$el[0]);
                    var offset_left_panel = panel.offset().left,
                        width_panel = panel.outerWidth(true);

                    if(offset_left_panel + width_panel > $(window).outerWidth())
                    {
                        panel.css({
                            right: 0
                        });
                    }

                    if(offset_left_panel < 0)
                    {
                        panel.css({
                            left: 10
                        });
                    }
                },
                panel: {
                    classes: 'smiles-panel',
                    autohide: false,
                    html: this.renderHTML(images),
                    onclick: function(data) {
                        var target = editor.dom.getParent(data.target, '.' + class_item);
                        if(target)
                        {
                            editor.insertContent('<img class="comment-smiley-icon" src="' + target.getAttribute(data_url) + '" />');
                            this.hide();
                        }
                    }
                }
            };
        }
    };

    tinymce.create('tinymce.plugins.Meme', {

        init: function(editor) {
            var options = editor.getParam('meme') || {};
            options.size_image = options.size_image || 50;
            options.sources = (options.sources !== undefined) ? (!$.isArray(options.sources) ? [options.sources] : options.sources) : [];

            new Meme(editor, options);
        },

        
        getInfo: function () {
            return {
                longname: 'Meme Icons',
                author: 'InuHa',
                version: tinymce.majorVersion + '.' + tinymce.minorVersion
            };
        }
    });

    tinymce.PluginManager.add('meme', tinymce.plugins.Meme);

})(tinymce, jQuery);